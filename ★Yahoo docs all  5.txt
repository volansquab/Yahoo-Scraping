def convert_date_time(p_day):
	import datetime
	p_day = p_day.replace('配信','')
	p_day = p_day.replace('(月)','')
	p_day = p_day.replace('(火)','')
	p_day = p_day.replace('(水)','')
	p_day = p_day.replace('(木)','')
	p_day = p_day.replace('(金)','')
	p_day = p_day.replace('(土)','')
	p_day = p_day.replace('(日)','')
	date_t = p_day.split('/')
	month1 = date_t[0]
	date1 = date_t[1]
	date2 = date1.split()
	date1 = date2[0]
	time1 = date2[1]
	if len(month1) == 1:
		month1 = "0"+month1
	if len(date1) == 1:
		date1 = "0" + date1
	time_t = time1.split(':')
	hour1 = time_t[0]
	min1 = time_t[1]
	if len(hour1) == 1:
		hour1 = "0" + hour1
	if len(min1) == 1:
		min1 = "0" + min1
	today = datetime.date.today()
	date2 = str(today.year) + '-' + str(month1) + '-' + str(date1) + ' ' + str(hour1) + ":" + str(min1) + ':00'
	datetime.datetime.strptime(date2, '%Y-%m-%d %H:%M:%S')
	return date2 + ".000000 JST"


def main():
	import sys
	sys.path.append('/usr/local/envs/py3env/lib/python3.5/site-packages/chromedriver-binary')
	import numpy as np
	import pandas as pd
	import chromedriver_binary
	from time import sleep
	import time
	import re

	from selenium import webdriver
	from selenium.webdriver.chrome.options import Options
	from selenium.webdriver.support.ui import WebDriverWait
	from selenium.webdriver.support import expected_conditions as EC
	from selenium.webdriver.common.by import By


	query = "SELECT DISTINCT url,category FROM SITE.YahooSummary order by url DESC limit 1000 offset 13000"
	# dialect='standard' で標準SQLを使用
	df = pd.read_gbq(query,'robotic-column-270803', dialect='standard')
	urls = df.values
	options = Options()
	options.add_argument('--headless')
	options.add_argument('--no-sandbox')

	link_n2 = 0
	article_n = 2
	data = []
	for url in urls:
		try:
			driver = webdriver.Chrome(options=options)
			url0 = url[0]
			driver.get(url0)
			time.sleep(2)
			multiple_f = False
			articles = driver.find_elements_by_tag_name("a")
			ac = 0
			for article in articles:
				if 'page=' in article.get_attribute("href"):
					url0 = article.get_attribute("href")
					multiple_f = True
					ac = ac + 1
			loc = url0.find('page=')
			url0 = url0[:loc]
			if multiple_f == True:
				body = ''
				for num in range(ac-1):
					url2 = url0
					url1 = url2 + "page=" + str(num+1)
					driver2 = webdriver.Chrome(options=options)
					driver2.get(url1)
					time.sleep(2)
					articles = driver2.find_elements_by_tag_name("p")
					article_n = 2
					for article in articles:
						pattern = '.*配信$'
						search_result = re.search(pattern, article.text)
						if search_result:
							p_day = search_result.group()
							p_day = convert_date_time(p_day)
							article_n = 0
						else:
							if article_n == 0:
								headline = article.text
							elif article_n == 1:
								body = body + article.text
								body = headline + body
								body = body.replace('\n','')
								low = [p_day,body,url[1],'MULIT']
								data.append(low)
								link_n2 = link_n2 + 1
							article_n = article_n + 1
					driver2.quit()
			else:
				articles = driver.find_elements_by_tag_name("p")
				for article in articles:
					pattern = '.*配信$'
					search_result = re.search(pattern, article.text)
					if search_result:
						p_day = search_result.group()
						p_day = convert_date_time(p_day)
						article_n = 0
					else:
						if article_n == 0:
							headline = article.text
						elif article_n == 1:
							body = article.text
							body = headline + body
							body = body.replace('\n','')
							low = [p_day,body,url[1],'SINGL']
							data.append(low)
							link_n2 = link_n2 + 1
						article_n = article_n + 1
			driver.quit()
		except:
			print(link_n2)
			print(url[0])
	print(link_n2)
	#データ書き込みループ
	sample_dataframe = pd.DataFrame(data,columns=['posted_date','body','category','attr'])
	sample_dataframe.to_gbq('SITE.YahooArticles', 'robotic-column-270803',if_exists = 'append')
if __name__ == '__main__':
	main()
